// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// 사용자 테이블 (Auth.js 기본 스키마)
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  qrCodes       QrCode[]
  templates     QrTemplate[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// QR 코드 히스토리 테이블
model QrCode {
  id         String   @id @default(cuid())
  userId     String
  type       String // URL, TEXT, WIFI, EMAIL, SMS, VCARD, LOCATION
  title      String? // 사용자가 지정한 제목
  content    String // QR 코드에 포함된 실제 데이터
  settings   String // 색상, 로고, 모양 등 커스터마이징 설정 (JSON 문자열)
  isFavorite Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, createdAt])
  @@index([userId, type])
}

// 사용자 템플릿 테이블
model QrTemplate {
  id        String   @id @default(cuid())
  userId    String
  name      String // 템플릿 이름
  settings  String // 색상, 로고, 모양 등 설정 (JSON 문자열)
  isDefault Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}
